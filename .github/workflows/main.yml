name: CI

on: [pull_request]

jobs:
  build:
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@v2
    - name: Test formulas
      # Ideally we would test a) building from source for the current
      # version, b) building from source for HEAD, and c) pouring the pre-built
      # bottle. Unfortunately building from source on GitHub VMs takes 30m+,
      # so presently we only truly test the bottle (c).
      #
      # To have some confidence in (a) and (b), we use `brew fetch` to
      # at least validate the source tarball and Git repository, respectively,
      # can be retrieved by Homebrew.
      run: |
        set -euo pipefail
        mkdir -p "$(dirname $(brew --repo ${{github.repository}}))"
        cp -a "$GITHUB_WORKSPACE" "$(brew --repo ${{github.repository}})"
        brew install docker docker-machine
        brew services start docker-machine
        mkdir -p ~/.docker/machine/cache/
        curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
        docker-machine create --driver virtualbox --virtualbox-boot2docker-url ~/.docker/machine/cache/boot2docker.iso --virtualbox-hostonly-cidr 192.168.63.1/24 default
        eval $(docker-machine env default)
        for formula in materialized; do
          metadata=$(brew info --json $formula)
          version=$(jq -r .[0].versions.stable <<< "$metadata")
          sha=$(git ls-remote https://github.com/MaterializeInc/materialize.git "v$version^{}" | cut -f1)
          echo "FORMULA_VERSION=$version" >> "$GITHUB_ENV"
          echo "version=$version" "sha=$sha"
          set -x
          brew fetch --build-from-source $formula
          brew fetch --HEAD $formula
          brew install $formula
          brew linkage --test $formula
          brew test $formula --verbose
          set +x
          if ! $formula --version 2>&1 | grep "${sha:0:9}"; then
            echo "$formula --version reports wrong version" >&2
            $formula --version
            exit 1
          fi
          for platform in mojave arm64_big_sur; do
            bottle_hash=$(jq -r .[0].bottle.stable.files."$platform".sha256 <<< "$metadata")
            echo "bottle_hash=$bottle_hash"
            bin/mkbottle "$version" "$platform" "$formula"
            echo "$bottle_hash  bottle.$platform.tar.gz" | shasum -a 256 --check
          done
        done
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: bottle
        path: $formula-${{env.FORMULA_VERSION}}.*.bottle.tar.gz
